class RegionMap{constructor(e,t,n,s,o,i){this.regionMap=e,this.tileSize=t,this.worldMinX=n,this.worldMinZ=s,this.worldWidth=o,this.worldHeight=i}hasTile(e,t,n){const s=Math.pow(2,n),d=Math.floor(this.worldMinX*s/this.tileSize),u=Math.floor(this.worldMinZ*s/this.tileSize),h=Math.ceil((this.worldMinX+this.worldWidth)*s/this.tileSize)-1,m=Math.ceil((this.worldMinZ+this.worldHeight)*s/this.tileSize)-1;if(e<d||t<u||e>h||t>m)return!1;const i=this.tileSize/s,a={x:e*i,z:t*i},o={x:Math.floor(a.x/512),z:Math.floor(a.z/512)},r=Math.ceil(i/512);for(let e=o.x;e<o.x+r;e++)for(let t=o.z;t<o.z+r;t++){const n={x:Math.floor(e/32),z:Math.floor(t/32)},s=this.regionMap.find(e=>e.x==n.x&&e.z==n.z);if(s){const i=e-n.x*32,a=t-n.z*32,o=a*32+i;var f=s.m[Math.floor(o/32)],c=o%32,l=(f&1<<c)!=0;if(l)return!0}}return!1}}class RedDotMarker{#source=void 0;#layer=void 0;#map=void 0;#dataProjection=void 0;#viewProjection=void 0;constructor(e,t,n){this.#map=e,this.#dataProjection=t,this.#viewProjection=n,this.#source=new ol.source.Vector({features:[]}),this.#layer=new ol.layer.Vector({source:this.#source,zIndex:1e3}),this.#map.addLayer(this.#layer),window.addEventListener("hashchange",e=>{this.#hashChanged(e.newURL)}),this.#hashChanged(window.location.href)}getCoordinates(){return RedDotMarker.getCoordinatesFromUrlHash(window.location.hash)}static getCoordinatesFromUrlHash(e){if(!e||e.length<=1)return void 0;const t=new URLSearchParams(e.substring(1)),n=t.get("rx"),s=t.get("rz");if(!n||!s)return void 0;const o=[parseInt(n),parseInt(s)];return o}static getUrlHashWithCoordinates(e,t){e??="#";const n=new URLSearchParams(e.substring(1));t?(n.set("rx",t[0]),n.set("rz",t[1])):(n.delete("rx"),n.delete("rz"));const s=n.toString();return"#"+s}setCoordinates(e){const t=new URL(window.location.href);t.hash=RedDotMarker.getUrlHashWithCoordinates(t.hash,e),window.location.replace(t)}#hashChanged(e){const t=RedDotMarker.getCoordinatesFromUrlHash(new URL(e).hash);this.#setRedDotMarker(t)}#setRedDotMarker(e){if(this.#source.clear(),!e)return;const t=new ol.Feature({geometry:new ol.geom.Point(ol.proj.transform(e,this.#dataProjection,this.#viewProjection))});t.setStyle(new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"red"}),stroke:new ol.style.Stroke({color:"#ffffff",width:2})}),text:new ol.style.Text({text:e[0]+", "+e[1],font:"bold 14px Arial",offsetY:25,fill:new ol.style.Fill({color:"#000000"}),stroke:new ol.style.Stroke({color:"#ffffff",width:3}),padding:[4,6,4,6]})})),this.#source.addFeature(t)}}class Unmined{olMap=null;gridLayer=null;coordinateLayer=null;viewProjection=null;dataProjection=null;regionMap=null;markersLayer=null;playerMarkersLayer=null;#scaleLine=null;#options=null;static defaultOptions={enableGrid:!0,showGrid:!0,binaryGrid:!0,showScaleBar:!0,denseGrid:!1,showMarkers:!0,showPlayers:!0,centerX:0,centerZ:0};constructor(e,t,n){const d=256;this.#options={...Unmined.defaultOptions,...t},this.loadSettings();const s=this.#options.minRegionX*512,i=this.#options.minRegionZ*512,c=(this.#options.maxRegionX+1-this.#options.minRegionX)*512,l=(this.#options.maxRegionZ+1-this.#options.minRegionZ)*512;this.regionMap=new RegionMap(n,d,s,i,c,l);const a=window.devicePixelRatio??1;this.#initProjections(Math.max(Math.abs(s),Math.abs(i),Math.abs(s+c),Math.abs(s+l)));const u=ol.proj.transformExtent(ol.extent.boundingExtent([[s,i],[s+c,i+l]]),this.dataProjection,this.viewProjection),o=this.#options.maxZoom-this.#options.minZoom,m=new Array(o+1);for(let e=0;e<=o;++e){let t=1*Math.pow(2,o-e-this.#options.maxZoom);t=ol.proj.transform([t,t],this.dataProjection,this.viewProjection)[0],m[e]=t*a}var h=new ol.tilegrid.TileGrid({extent:u,origin:[0,0],resolutions:m,tileSize:d/a}),f=new ol.layer.Tile({source:new ol.source.XYZ({projection:this.viewProjection,tileGrid:h,tilePixelRatio:a,tileSize:d/a,tileUrlFunction:e=>{const t=e[1],n=e[2],s=-(o-e[0])+this.#options.maxZoom;if(this.regionMap.hasTile(t,n,s)){const e=("tiles/zoom.{z}/{xd}/{yd}/tile.{x}.{y}."+this.#options.imageFormat).replace("{z}",s).replace("{yd}",Math.floor(n/10)).replace("{xd}",Math.floor(t/10)).replace("{y}",n).replace("{x}",t);return e}}})}),p=new ol.control.MousePosition({coordinateFormat:ol.coordinate.createStringXY(0),projection:this.dataProjection});const r=new ol.Map({target:e,controls:ol.control.defaults.defaults().extend([p]),layers:[f],view:new ol.View({center:ol.proj.transform([this.#options.centerX,this.#options.centerZ],this.dataProjection,this.viewProjection),extent:u,projection:this.viewProjection,resolutions:h.getResolutions(),maxZoom:o,zoom:o-this.#options.maxZoom,constrainResolution:!0,showFullExtent:!0,constrainOnlyCenter:!0,enableRotation:!1})});this.#options.markers&&this.#options.markers.length>0&&(this.markersLayer=this.createMarkersLayer(this.#options.markers),r.addLayer(this.markersLayer)),this.#options.playerMarkers&&this.#options.playerMarkers.length>0&&(this.playerMarkersLayer=this.createMarkersLayer(this.#options.playerMarkers),r.addLayer(this.playerMarkersLayer)),this.#options.background&&(e.style.backgroundColor=this.#options.background),this.olMap=r,this.updateGraticule(),this.updateScaleBar(),this.updateMarkersLayer(),this.updatePlayerMarkersLayer(),this.olMap.addControl(this.createContextMenu()),this.redDotMarker=new RedDotMarker(this.olMap,this.dataProjection,this.viewProjection),this.centerOnRedDotMarker()}center(e){const t=this.olMap.getView(),n=ol.proj.transform(e,this.dataProjection,this.viewProjection);t.setCenter(n)}centerOnRedDotMarker(){const e=this.redDotMarker.getCoordinates();if(!e)return;this.center(e)}placeRedDotMarker(e){this.redDotMarker.setCoordinates(e)}createMarkersLayer(e){for(var t,n,o,a,r,c,l,i=[],s=0;s<e.length;s++)t=e[s],a=t.x,r=t.z,o=new ol.Feature({geometry:new ol.geom.Point(ol.proj.transform([a,r],this.dataProjection,this.viewProjection))}),n=new ol.style.Style,t.image&&n.setImage(new ol.style.Icon({src:t.image,anchor:t.imageAnchor,scale:t.imageScale})),t.text&&n.setText(new ol.style.Text({text:t.text,font:t.font,offsetX:t.offsetX,offsetY:t.offsetY,fill:t.textColor?new ol.style.Fill({color:t.textColor}):null,padding:t.textPadding??[2,4,2,4],stroke:t.textStrokeColor?new ol.style.Stroke({color:t.textStrokeColor,width:t.textStrokeWidth}):null,backgroundFill:t.textBackgroundColor?new ol.style.Fill({color:t.textBackgroundColor}):null,backgroundStroke:t.textBackgroundStrokeColor?new ol.style.Stroke({color:t.textBackgroundStrokeColor,width:t.textBackgroundStrokeWidth}):null})),o.setStyle(n),i.push(o);return c=new ol.source.Vector({features:i}),l=new ol.layer.Vector({source:c}),l}static defaultPlayerMarkerStyle={image:"playerimages/default.png",imageAnchor:[.5,.5],imageScale:.25,textColor:"white",offsetX:0,offsetY:20,font:"14px Arial",textBackgroundColor:"#00000088",textPadding:[2,4,2,4]};static playerToMarker(e){var t=Object.assign({},Unmined.defaultPlayerMarkerStyle);return t.x=e.x,t.z=e.z,t.text=e.name,t}static createPlayerMarkers(e){let t=e.map(e=>Unmined.playerToMarker(e));return t}updateGraticule(){if(!this.olMap)return;if(this.gridLayer&&this.olMap.removeLayer(this.gridLayer),this.coordinateLayer&&this.olMap.removeLayer(this.coordinateLayer),this.gridLayer=null,!this.#options.enableGrid)return;this.gridLayer=this.#createGraticuleLayer(!1),this.coordinateLayer=this.#createGraticuleLayer(!0),this.gridLayer?.setVisible(this.#options.showGrid),this.coordinateLayer?.setVisible(this.#options.showGrid),this.gridLayer.setZIndex(500),this.coordinateLayer.setZIndex(1e4),this.olMap.addLayer(this.gridLayer),this.olMap.addLayer(this.coordinateLayer)}#createGraticuleLayer(e){const c="#ffffff",l="#222222",t=this.olMap.getView().getMaxZoom()+2,n=new Array(t);if(this.#options.binaryGrid){let e=16;for(let s=0;s<t;++s){const o=e,i=ol.proj.transform([o,o],this.dataProjection,this.viewProjection)[0];n[t-1-s]=i,e*=2}}else{const e=[1,2,5];let s=10,o=0;for(let i=0;i<t;++i){const a=s*e[o++%e.length],r=ol.proj.transform([a,a],this.dataProjection,this.viewProjection)[0];n[t-1-i]=r,o%e.length==0&&(s*=10)}}const o=new ol.style.Text({font:"14px sans-serif",placement:"point",fill:new ol.style.Fill({color:"#fff"}),stroke:new ol.style.Stroke({color:"#000",width:2})}),i=o.clone();i.setOffsetY(10);const s=o.clone();s.setOffsetX(-2),s.setTextAlign("right");const a=e?new ol.style.Stroke({color:"rgba(0, 0, 0, 0)",width:0}):new ol.style.Stroke({color:"rgb(0,0,0)",width:.5}),r=new ol.layer.Graticule({strokeStyle:a,showLabels:e,wrapX:!1,targetSize:this.#options.denseGrid?60:120,intervals:n,lonLabelFormatter:e?e=>{const n=new ol.geom.Point(ol.proj.transform([e,0],this.viewProjection,this.dataProjection)).getFirstCoordinate();let t=Math.round(n[0]);return t==0?"x = 0":t.toString()}:void 0,latLabelFormatter:e?e=>{const n=new ol.geom.Point(ol.proj.transform([0,e],this.viewProjection,this.dataProjection)).getFirstCoordinate();let t=Math.round(n[1]);return t==0?"z = 0":t.toString()}:void 0,lonLabelStyle:e?i:void 0,latLabelStyle:e?s:void 0,lonLabelPosition:1,latLabelPosition:1});return r}static copyToClipboard(e,t){if(!navigator||!navigator.clipboard||!navigator.clipboard.writeText){Unmined.toast("Clipboard is not accessible");return}navigator.clipboard.writeText(e),Unmined.toast(t??"Copied!")}static toast(e){Toastify({text:e,duration:2e3,gravity:"top",position:"center"}).showToast()}createContextMenu(){const e=new ContextMenu({width:220,defaultItems:!1,items:[]});return e.on("open",t=>{const n=ol.proj.transform(this.olMap.getEventCoordinate(t.originalEvent),this.viewProjection,this.dataProjection);n[0]=Math.round(n[0]),n[1]=Math.round(n[1]),e.clear(),e.push({text:`Copy /tp ${n[0]} ~ ${n[1]}`,callback:()=>{Unmined.copyToClipboard(`/tp ${n[0]} ~ ${n[1]}`)}}),e.push("-"),e.push({text:`Place red dot marker here`,classname:"menuitem-reddot",callback:()=>{this.placeRedDotMarker(n)}}),this.redDotMarker.getCoordinates()&&(e.push({text:`Copy marker link`,callback:()=>{Unmined.copyToClipboard(window.location.href)}}),e.push({text:`Clear marker`,callback:()=>{this.placeRedDotMarker(void 0)}})),e.push("-"),this.playerMarkersLayer&&e.push({classname:this.#options.showPlayers?"menuitem-checked":"menuitem-unchecked",text:"Show players",callback:()=>this.togglePlayers()}),this.markersLayer&&e.push({classname:this.#options.showMarkers?"menuitem-checked":"menuitem-unchecked",text:"Show markers",callback:()=>this.toggleMarkers()}),(this.markersLayer||this.playerMarkersLayer)&&e.push("-"),this.#options.enableGrid&&(e.push({classname:this.#options.showGrid?"menuitem-checked":"menuitem-unchecked",text:"Show grid",callback:()=>this.toggleGrid()}),e.push({classname:this.#options.denseGrid?"menuitem-checked":"menuitem-unchecked",text:"Dense grid",callback:()=>this.toggleGridInterval()}),e.push({classname:this.#options.binaryGrid?"menuitem-checked":"menuitem-unchecked",text:"Binary coordinates",callback:()=>this.toggleBinaryGrid()})),e.push({classname:this.#options.showScaleBar?"menuitem-checked":"menuitem-unchecked",text:"Show scalebar",callback:()=>this.toggleScaleBar()})}),e}toggleGridInterval(){this.#options.denseGrid=!this.#options.denseGrid,this.updateGraticule(),this.saveSettings()}toggleBinaryGrid(){this.#options.binaryGrid=!this.#options.binaryGrid,this.updateGraticule(),this.saveSettings()}toggleGrid(){this.#options.showGrid=!this.#options.showGrid,this.updateGraticule(),this.saveSettings()}toggleScaleBar(){this.#options.showScaleBar=!this.#options.showScaleBar,this.updateScaleBar(),this.saveSettings()}toggleMarkers(){this.#options.showMarkers=!this.#options.showMarkers,this.updateMarkersLayer(),this.saveSettings()}togglePlayers(){this.#options.showPlayers=!this.#options.showPlayers,this.updatePlayerMarkersLayer(),this.saveSettings()}loadSettings(){const e=(()=>{try{const e=localStorage.getItem("mapSettings");return e?JSON.parse(e):void 0}catch{return void 0}})();if(!e)return;this.#options.showScaleBar=e.showScaleBar??this.#options.showScaleBar,this.#options.showGrid=e.showGrid??this.#options.showGrid,this.#options.binaryGrid=e.binaryGrid??this.#options.binaryGrid,this.#options.denseGrid=e.denseGrid??this.#options.denseGrid,this.#options.showMarkers=e.showMarkers??this.#options.showMarkers,this.#options.showPlayers=e.showPlayers??this.#options.showPlayers}saveSettings(){const e={showScaleBar:this.#options.showScaleBar,showGrid:this.#options.showGrid,binaryGrid:this.#options.binaryGrid,denseGrid:this.#options.denseGrid,showMarkers:this.#options.showMarkers,showPlayers:this.#options.showPlayers};localStorage.setItem("mapSettings",JSON.stringify(e))}updateMarkersLayer(){this.markersLayer?.setVisible(this.#options.showMarkers)}updatePlayerMarkersLayer(){this.playerMarkersLayer?.setVisible(this.#options.showPlayers)}updateScaleBar(){!this.#options.showScaleBar&&this.#scaleLine?(this.olMap.removeControl(this.#scaleLine),this.#scaleLine=void 0):this.#options.showScaleBar&&!this.#scaleLine&&(this.#scaleLine=new ol.control.ScaleLine({bar:!0,minWidth:200}),this.olMap.addControl(this.#scaleLine))}#initProjections(e){const n=Math.max(3e7,e)/270,t=270;this.viewProjection=new ol.proj.Projection({code:"VIEW",units:"degrees",extent:[-t,-t,+t,+t],worldExtent:[-t,-t,+t,+t],global:!0}),this.dataProjection=new ol.proj.Projection({code:"DATA",units:"pixels",metersPerUnit:1}),ol.proj.addCoordinateTransforms(this.viewProjection,this.dataProjection,function(e){return[e[0]*n,-e[1]*n]},function(e){return[e[0]/n,-e[1]/n]})}}